Introduction
--------------
Cookbook is a Haskell library used in a load of personal projects.

Cookbook uses barebones Haskell syntax (and some standard library functions for IO) to build a complex cluster of interdependant libraries. The selling point is the library's self-contained nature; any correct ghc installation can compile the entire library, with no external dependencies from Hackage or elsewhere. Cookbook is also exceedingly well documented and portable, with ports available for Lisp and C already. Cookbook will eventually be ported to itself through lhs for better Haddock documentation.

As a general rule, files in Cookbook.Project are standards implementations, and nothing inside of the Cookbook library should depend on them.

Overview
------------

Cookbook has the following layout. | = directory, ^=file (as per bpp syntax)

|cookbook
|PORTS
||Lisp
||Cfamily
||Essential -- Provides basic functionallity
|||^Common -- A copy of the most commonly used functions, depends on nothing.
|||^Continuous -- A typeclass for overloaded functions.
||Project -- Standards definitions and implementations.
|||Configuration -- Very simple unsanitized configuration file syntax.
|||Groups -- OO markup langauge.
|||Scribe -- Database management system / language. Uses curly-brace syntax. Nobody really knows how this works.
||Recipes -- Non-generic general-use functions.
|||^Diffstat -- Diff and patch implementation.
|||^Configuration -- Tool for interacting with simple configuration files.
|||^Sanitize -- All sorts of utilities for kicking list's butts, when you need to.
|||^Groups -- Markup language for data
||Ingredients
|||Lists
||||^Access -- Functions for accessing and clarifying lists.
||||^Modify -- Modify lists
||||^Stats -- Statistical analysis for lists.
|||Functional
||||^Break -- Different breaks (filterBreak, removeBreak)
|||Tupples
||||^Look -- Look, tsort
||||^Assemble -- Sort and assemble lists of numeric tupples.

Installing
-------------
Cookbook can be installed on hackage with the command "cabal install cookbook". You can also install the package resulting from "runhaskell Setup.hs configure && runhaskell Setup.hs build" with cabal if that's your thing. There is now a Debian package available, but it will literally just run "cabal install cookbook", so get it from the source to stay up to date.

If you do not want to install Cookbook in a global position, place the Cookbook folder in your project's root directory. Because libraries use an unqualified header-level name, they can be called this way through "Cookbook.*" like normal.
