Cookbook is a Haskell library used in a load of personal projects.

Cookbook is an addition to the functionallity found in Prelude. It redefines some of the functions found in the Haskell standard library, but this is part of the reason why the library exists. With the exception of Monadic interfaces (IO, Process, Environment, etc), no standard library functions are used or even important. These libraries are completely standalone, and exist as dependencies to other cookbook files. 

One of the features of the Cookbook library can be considered a hack or pointless, but it's useful. Overloaded typeclasses are used to make incredibly generic functions. Soon every similar function (e.g, snipe and insert) will be available under generic typeclasses, that work on generics themselves. For instance, (after "norton" 't') and (after "norton" "or") are both valid statements, and to use the function "(Eq a)" is the only required restraint.

Cookbook has the following layout. | = directory, ^=file (as per bpp syntax)

|cookbook
|PORTS
||Lisp
||Cfamily
|^Common -- A copy of the most commonly used functions, depends on nothing.
|^Continuous -- A typeclass for overloaded functions.
||Recipes
|||^Diffstat -- Diff and Patch implementation.
|||^Configuration -- Tool for interacting with simple configuration files.
||Ingredients
|||Lists
||||^Access -- Functions for accessing and clarifying lists.
||||^Modify -- Modify lists
|||Functional
||||^Break -- Different breaks (filterBreak, removeBreak)
|||Tupples
||||^Look -- Look, tsort

Cookbook is meant to have very short definitions. The general form for a cookbook function entry is

--Function Purpose comment
--Usage Example
-- | Haddock comment.
Function Definition

To install Cookbook, you can either run "runhaskell Setup.hs configure && runhaskell Setup.hs build" and run "cabal install" on the resulting package. The library is also available on hackage under the name "cookbook", so "cabal install cookbook" regardless of what directory it's in will download and install it properly.

Cookbook ports are planned for many other functional languages. Currently Lisp and experimental C ports exists. Scala will likely receive a port within the year.
